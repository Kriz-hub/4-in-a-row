:root {
  --lightness: 65%;
  --ball-red: red;
  --ballshadow-red: rgb(252, 127, 127);
  --balldarkshadow-red:  rgb(88, 6, 6);
  --ball-blue: blue;
  --ballshadow-blue: rgb(152, 226, 255);
  --balldarkshadow-blue: rgb(1, 26, 36);
  --left-cube-text-color: red;
  --message-text-color: red;
  --right-cube-text-color: blue;
  --hover-color: red;
}

body {
  background-color:black;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 95px;
  perspective: 55em;
  perspective-origin: 1% calc(2% - 14em);
}

 #setting-page {
     font-size: 25px;
     color: white;
     background-color: rgb(72, 135, 151);
     align-items: center;
     justify-content: flex-start;
     width: 100vw;
     height: 100vh;
 }

 /*Inspired by radiobutton: https://codepen.io/Metty/pen/MWjOavR
 but in the end I changed it to a togglefield red or blue*/

 .wrapper {
  display: inline-flex;
  background: #fff;
  height: 50px;
  width: 300px;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 5px;
  padding: 20px 15px;
  box-shadow: 5px 5px 30px rgba(0,0,0,0.2);
}

#color-player1, #color-player2 {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  margin: 0 10px;
  border-radius: 5px;
  cursor: pointer;
  padding: 0 10px;
  border: 2px solid lightgrey;
  transition: all 0.3s ease;
}

#color-player1 {
    background: red;
}
#color-player2 {
    background: blue;
}

#scene {
 position: relative;
 transform-style: preserve-3d;
 /*animation: scene-rotate var(--rotate-speed) linear;*/
 transform: rotateY(0deg) translateY(0em);
 }

 
.rotate {
  animation: scene-rotate 15s infinite linear;
  }

  @keyframes scene-rotate { to { transform: rotateY(360deg);}}

 #floor {
  position: absolute;
  top: 1em;
  transform: translate(-50%, -50%) rotateX(90deg);
  width: 12em;
  height: 12em;
  background: radial-gradient(#0000, #000 var(--lightness)), repeating-conic-gradient(from 125deg, red, 
  rgb(206, 198, 198) 90deg 180deg);
  /*background-size: 100%, 1em 1em;*/
  /*repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);*/
}

.blinking-red {
  animation: 1s blink-red ease infinite;
}

@keyframes blink-red {

  from,
  to {
    background: rgb(255, 17, 17);
  }

  50% {
    background: darkred;
  }
}

.blinking-green {
  animation: 1s blink-green ease infinite;
}

@keyframes blink-green {

  from,
  to {
    background: rgb(19, 243, 12);}

  50% {
    background: green;}
}

 .message-text  {
    font-family:verdana; 
    font-size:0.35em; 
    text-align: center;
    transform: translateY(-0.25em);
    color: var(--message-text-color);
}

.score-text-red, .score-text-blue  {
  font-family:verdana; 
  font-size:0.3em; 
  text-align: center;
  transform: translateY(-0.25em);
}

.score-text-red {
    color: var(--left-cube-text-color);
}

.score-text-blue {
  color: var(--right-cube-text-color);
}

.cube {
  width: .5em;
  height: .5em;
  position: absolute;
  top: 2em;
  left: 0em;
}

.cube:hover {
  background: var(--hover-color);
}

 .leftside, .rightside, .frontside, .backside {
    position: absolute;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 0.5em rgba(48, 48, 48, 0.267) inset;
 }

.frontside { transform: translateZ(.25em) ; }
.rightside { transform: rotateY(90deg) translateZ(.25em) ; }
.backside {  transform: rotateY(180deg) translateZ(.25em) ; }
.leftside {  transform: rotateY(270deg) translateZ(.25em) ; }

.exit-cube {
  width: .5em;
  height: .5em;
  position: absolute;
  top:0em;
  left:-1.5em;
}

.score-cube-red {
  width: .5em;
  height: .5em;
  position: absolute;
  top:-1em;
  left:-5.25em;
}



.score-cube-blue {
  width: .5em;
  height: .5em;
  position: absolute;
  top:-1em;
  left:3.25em;
}

.score-front, .score-back {
    position: absolute;
    width: 400%; 
    height: 200%; 
    background: white;
    animation: inherit;
    box-shadow: 0 0 0.5em #000a inset;
 }

.score-left, .score-right {
  position: absolute;
  width: 100%;
  height: 200%;
  background: white;
  animation: inherit;
  box-shadow: 0 0 0.5em #000a inset;
}

  .score-front { transform: translateZ(.25em) translateZ(0em); }
  .score-back { transform: rotateY(180deg) translateZ(.25em) translateZ(0em); }  
  .score-right { transform: rotateY(90deg) translateZ(1.75em) translateX(0em); }
  .score-left { transform: rotateY(270deg) translateZ(.25em) translateX(0em); } 

   .score-top {
    position: absolute;
    width: 2em; /*because of the rotation in 3D this is now length*/
    height: .5em; /*because of the rotation in 3D this is now width*/
    top: -.25em;
    background: white;
    animation: inherit;
    transform: translateZ(0em) rotateX(90deg) /*translateY(-.25em) */translateX(0em);
    /*translateZ: move up/down, translateY: move forward/behind (lower: move behind) translateX: move left/right*/
    box-shadow: 0 0 0.5em #000a inset;
  }

  .message-cube {
    width: .5em;
    height: .5em;
    position: absolute;
    top:1.1em;
    left:-2.75em;
    display:none;
  }

 
  .message-front, .message-back {
      position: absolute;
      width: 1000%; 
      height: 200%; 
      background: white;
      box-shadow: 0 0 0.5em #000a inset;
   }
  
  .message-left, .message-right {
    position: absolute;
    width: 100%;
    height: 200%;
    background: white;
    box-shadow: 0 0 0.5em #000a inset;
  }
  
    .message-front { transform: translateZ(.25em) translateZ(3.5em); }
    .message-back { transform: rotateY(180deg) translateZ(.25em) translateZ(-3.5em); }  
    .message-right { transform: rotateY(90deg) translateZ(4.75em) translateX(-3.5em); }
    .message-left { transform: rotateY(270deg) translateZ(.25em) translateX(3.5em); } 
  
     .message-top {
      position: absolute;
      width: 5em; /*because of the rotation in 3D this is now length*/
      height: .5em; /*because of the rotation in 3D this is now width*/
      top: -.25em;
      background: white;
      transform: translateZ(0em) rotateX(90deg) translateY(3.5em) translateX(0em);
      /*translateZ: move up/down, translateY: move forward/behind (lower: move behind) translateX: move left/right*/
      box-shadow: 0 0 0.5em #000a inset;
    }
  

.redball {
  width: .5em; height: .5em;
  border-radius: 50%;
  position: absolute;
  left: 0em;
  bottom: -2em;
  background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-red), var(--ball-red), var(--balldarkshadow-red));
  animation: sscene-rotate 15s infinite linear reverse;
 }

 .blueball {
  width: .5em; height: .5em;
  border-radius: 50%;
  position: absolute;
  left: 0em;
  bottom: -2em;
  background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-blue), var(--ball-blue), var(--balldarkshadow-blue));
  animation: sscene-rotate 15s infinite linear reverse;
 }

 .ballshadow {
  position: absolute;
  width: .45em;
  height: .5em;
  transform: translateY(49%) rotateX(90deg) translateX(-0.05em);
}

.circleshadow {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: black;
  filter: blur(9px);
}


@media screen and (min-width: 320px) and (max-width: 835px) and (orientation: landscape) {
  body {
    font-size: 40px;
  }
}

@media screen and (min-width: 320px) and (max-width: 835px) and (orientation: portrait) {
  body {
    font-size: 20px;
  }
}

@media screen and (min-width: 320px) and (max-width: 835px) {

  #sccene {
    transform: translateX(-.1em) translateZ(2.8em);
  }

  .leftside, .rightside, .frontside, .backside {
    box-shadow: 0 0 0.5em rgba(48, 48, 48, 0.5) inset;
 }

  .rotate {
    animation: none;
    }

  .redball, .blueball {
      animation: none;
  }
}
