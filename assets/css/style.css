:root {
  --lightness: 65%;
  --ball-red: red;
  --ballshadow-red: rgb(252, 127, 127);
  --balldarkshadow-red:  rgb(88, 6, 6);
  --ball-blue: blue;
  --ballshadow-blue: rgb(152, 226, 255);
  --balldarkshadow-blue: rgb(1, 26, 36);
  --left-cube-text-color: red;
  --message-text-color: red;
  --right-cube-text-color: blue;
  --hover-color: red;
}

body {
  background-color:black;
  min-height: 86vh;
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: verdana;
  font-size: 95px;
  perspective: 55em;
  perspective-origin: 1% calc(2% - 14em);
}

 #setting-page {
     font-size: 20px;
     font-family: verdana;
     color: white;
     background-color: rgb(148, 166, 170);
     align-items: center;
     justify-content: flex-start;
 }

 .collapsible {
  /*background-color: #777;*/
  color: white;
  cursor: pointer;
  /*padding: 18px;*/
  width: 100%;
  border: none;
  text-align: left;
  outline: none;
  /*font-size: 15px;*/}

/*.active, .collapsible:hover {
  background-color: #555;
  width: 100%;
}*/

.content {
  /*padding: 0 18px;*/
  display: none;
  overflow: hidden;
  opacity: 0;
}

.collapsible:hover {
  transform: translateY(-5px) scale(1.01);
}

.h1-title {
  margin-right: 50px;
}

ul {
  margin-left: 0;
  padding-left: 5px;
  opacity: inherit;
}

li {
  margin-right: 30px;
}

.grid-columns {display: flex;}

.grid-columns > * {flex-basis: 100%;}

/*https://codepen.io/onediv/pen/jEmjap*/
button{
  background:white;
  color:blue;
  border:none;
  position:relative;
  height:40px;
  font-size:0.75em;
  padding:0 1em;
  cursor:pointer;
  transition:800ms ease all;
  outline:none;
}
button:hover{
  background:blue;
  color:white;
}
button:before,button:after{
  content:'';
  position:absolute;
  top:0;
  right:0;
  height:2px;
  width:0;
  background: white;
  transition:400ms ease all;
}
button:after{
  right:inherit;
  top:inherit;
  left:0;
  bottom:0;
}
button:hover:before,button:hover:after{
  width:100%;
  transition:800ms ease all;
}


.bring-shadow {
  margin: 2vh 2vw; 
  background-color: rgb(72, 135, 151);
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.5);
}

.bring-margin, .bring-margin-wrapper {margin: inherit;}

.remove-mouse-pointer { pointer-events: none;}

 /*Inspired by radiobutton: https://codepen.io/Metty/pen/MWjOavR*/


.wrapper{
  display: inline-flex;
  background: #fff;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 5px;
  padding: 20px 15px;
  box-shadow: 5px 5px 30px rgba(0,0,0,0.2);
}

.wrapper-size-a {
  height: 50px;
  width: 400px;
}

.wrapper-size-b {
  height: 50px;
  width: 500px;
}

.wrapper .option{
  background: #fff;
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  margin: 0 10px;
  border-radius: 5px;
  cursor: pointer;
  padding: 0 10px;
  border: 2px solid lightgrey;
  transition: all 0.3s ease;
}
.wrapper .option .dot{
  height: 20px;
  width: 20px;
  background: #d9d9d9;
  border-radius: 50%;
  position: relative;
}
.wrapper .option .dot::before{
  position: absolute;
  content: "";
  top: 4px;
  left: 4px;
  width: 12px;
  height: 12px;
  background: #0069d9;
  border-radius: 50%;
  opacity: 0;
  transform: scale(1.5);
  transition: all 0.3s ease;
}
input[type="radio"]{
  display: none;
}
#option-1:checked:checked ~ .option-1,
#option-2:checked:checked ~ .option-2,
#option-1b:checked:checked ~ .option-1b,
#option-2b:checked:checked ~ .option-2b,
#option-3b:checked:checked ~ .option-3b{
  border-color: #0069d9;
  background: #0069d9;
}
#option-1:checked:checked ~ .option-1 .dot,
#option-2:checked:checked ~ .option-2 .dot,
#option-1b:checked:checked ~ .option-1b .dot,
#option-2b:checked:checked ~ .option-2b .dot,
#option-3b:checked:checked ~ .option-3b .dot{
  background: #fff;
}
#option-1:checked:checked ~ .option-1 .dot::before,
#option-2:checked:checked ~ .option-2 .dot::before,
#option-1b:checked:checked ~ .option-1b .dot::before,
#option-2b:checked:checked ~ .option-2b .dot::before,
#option-3b:checked:checked ~ .option-3b .dot::before{
  opacity: 1;
  transform: scale(1);
}
/*.wrapper .option span{*/
  .wrapper-spansize {
  font-size: 20px;
  color: #808080;
}
#option-1:checked:checked ~ .option-1 span,
#option-2:checked:checked ~ .option-2 span,
#option-1b:checked:checked ~ .option-1b span,
#option-2b:checked:checked ~ .option-2b span,
#option-3b:checked:checked ~ .option-3b span{
  color: #fff;
}

 /*Inspired by radiobutton: https://codepen.io/Metty/pen/MWjOavR
 but in the end I changed it to a togglefield red or blue*/

 .simple-wrapper {
  display: inline-flex;
  background: #fff;
  height: 50px;
  width: 300px;
  align-items: center;
  justify-content: space-evenly;
  border-radius: 5px;
  padding: 20px 15px;
  box-shadow: 5px 5px 30px rgba(0,0,0,0.2);
}

#color-player1, #color-player2 {
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  margin: 0 10px;
  border-radius: 5px;
  cursor: pointer;
  padding: 0 10px;
  border: 2px solid lightgrey;
  transition: all 0.3s ease;
}

#color-player1 {background: red;}
#color-player2 {background: blue;}

.error-blink {
  background: red;
}

#landscape-orientation {
  position: absolute;
  background: black;
  color: white;
  display: none;
  font-size: 3vh;
  width: 90vw;
  height: 90vh;
}

#orientation-text {
  opacity: 0;
  animation: fade-out 7s ease-out;
}

@keyframes fade-out { 
  0% { opacity: 1; }
  40% { opacity: 1; }
  50% { opacity: 0.85; }
  60% { opacity: 0.7; }
  70% { opacity: 0.55; }
  80% { opacity: 0.4; }
  90% { opacity: 0.2; }
  100% { opacity: 0; }
}

#scene {
 position: relative;
 transform-style: preserve-3d;
 transform: rotateY(0deg) translateY(0em);
 }

 
.rotate {animation: scene-rotate 15s infinite linear;}

  @keyframes scene-rotate { to { transform: rotateY(360deg);}}

 #floor {
  position: absolute;
  top: 1em;
  transform: translate(-50%, -50%) rotateX(90deg);
  width: 12em;
  height: 12em;
  background: radial-gradient(#0000, #000 var(--lightness)), repeating-conic-gradient(from 125deg, red, 
  rgb(206, 198, 198) 90deg 180deg);
  /*background-size: 100%, 1em 1em;*/
  /*repeating-conic-gradient(from 45deg, #111 0deg 90deg, #222 90deg 180deg);*/
}

.blinking-red {animation: 1s blink-red ease infinite;}
.blinking-green {animation: 1s blink-green ease infinite;}

@keyframes blink-red {from, to {background: rgb(255, 17, 17);} 50% {background: darkred;}}
@keyframes blink-green {from, to {background: rgb(19, 243, 12);} 50% {background: green;}}

.message-text  {
    font-family:verdana; 
    font-size:0.35em; 
    text-align: center;
    transform: translateY(-0.25em);
    color: var(--message-text-color);
}

.score-text-red, .score-text-blue  {
  font-family:verdana; 
  font-size:0.3em; 
  text-align: center;
  transform: translateY(-0.25em);
}

.score-text-red {color: var(--left-cube-text-color);}
.score-text-blue {color: var(--right-cube-text-color);}

.cube {
  width: .5em;
  height: .5em;
  position: absolute;
  top: 2em;
  left: 0em;
}

.cube:hover {
  background: var(--hover-color);
}

 .leftside, .rightside, .frontside, .backside {
    position: absolute;
    width: 100%;
    height: 100%;
    box-shadow: 0 0 0.5em rgba(48, 48, 48, 0.267) inset;
 }

.frontside { transform: translateZ(.25em) ; }
.rightside { transform: rotateY(90deg) translateZ(.25em) ; }
.backside {  transform: rotateY(180deg) translateZ(.25em) ; }
.leftside {  transform: rotateY(270deg) translateZ(.25em) ; }

.exit-cube {
  width: .5em;
  height: .5em;
  position: absolute;
  top:0em;
  left:-1.5em;
}

#score-cube-red {
  width: .5em;
  height: .5em;
  position: absolute;
  top:-1em;
  left:-5.25em;
}

#score-cube-blue {
  width: .5em;
  height: .5em;
  position: absolute;
  top:-1em;
  left:3.25em;
}

.score-front, .score-back {
    position: absolute;
    width: 400%; 
    height: 200%; 
    background: white;
    animation: inherit;
    box-shadow: 0 0 0.5em #000a inset;
 }

.score-left, .score-right {
  position: absolute;
  width: 100%;
  height: 200%;
  background: white;
  animation: inherit;
  box-shadow: 0 0 0.5em #000a inset;
}

.score-front { transform: translateZ(.25em) translateZ(0em); } 
.score-back { transform: rotateY(180deg) translateZ(.25em) translateZ(0em); }  
.score-right { transform: rotateY(90deg) translateZ(1.75em) translateX(0em); }
.score-left { transform: rotateY(270deg) translateZ(.25em) translateX(0em); } 

.score-top {
    position: absolute;
    width: 2em; /*because of the rotation in 3D this is now length*/
    height: .5em; /*because of the rotation in 3D this is now width*/
    top: -.25em;
    background: white;
    animation: inherit;
    transform: translateZ(0em) rotateX(90deg) /*translateY(-.25em) */translateX(0em);
    /*translateZ: move up/down, translateY: move forward/behind (lower: move behind) translateX: move left/right*/
    box-shadow: 0 0 0.5em #000a inset;
  }

.message-cube {
    width: .5em;
    height: .5em;
    position: absolute;
    top:1.1em;
    display:none;
}

.thirst-messagecube-position {
    left:-2.75em;
}

.second-messagecube-position {
    left:-2.75em;
}

.message-front, .message-back {
      position: absolute;
      width: 1000%; 
      height: 200%; 
      background: white;
      box-shadow: 0 0 0.5em #000a inset;
}
  
.message-left, .message-right {
    position: absolute;
    width: 100%;
    height: 200%;
    background: white;
    box-shadow: 0 0 0.5em #000a inset;
}
  
.message-front { transform: translateZ(.25em) translateZ(3.5em); }
.message-back { transform: rotateY(180deg) translateZ(.25em) translateZ(-3.5em); }  
.message-right { transform: rotateY(90deg) translateZ(4.75em) translateX(-3.5em); }
.message-left { transform: rotateY(270deg) translateZ(.25em) translateX(3.5em); } 
  
.message-top {
      position: absolute;
      width: 5em; /*because of the rotation in 3D this is now length*/
      height: .5em; /*because of the rotation in 3D this is now width*/
      top: -.25em;
      background: white;
      transform: translateZ(0em) rotateX(90deg) translateY(3.5em) translateX(0em);
      /*translateZ: move up/down, translateY: move forward/behind (lower: move behind) translateX: move left/right*/
      box-shadow: 0 0 0.5em #000a inset;
}
  

.redball {
  width: .5em; height: .5em;
  border-radius: 50%;
  position: absolute;
  left: 0em;
  bottom: -2em;
  background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-red), var(--ball-red), var(--balldarkshadow-red));
  animation: sscene-rotate 15s infinite linear reverse;
}


.blueball {
  width: .5em; height: .5em;
  border-radius: 50%;
  position: absolute;
  left: 0em;
  bottom: -2em;
  background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-blue), var(--ball-blue), var(--balldarkshadow-blue));
  animation: sscene-rotate 15s infinite linear reverse;
}


.redball-blink {animation: 0.25s red-ball-blink ease infinite;}
.blueball-blink {animation: 0.25s blue-ball-blink ease infinite;}

@keyframes red-ball-blink {
  from, to {background: radial-gradient(farthest-side at .4em .2em, var(--ball-red), var(--balldarkshadow-red), var(--balldarkshadow-red));} 
  50% {background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-red), var(--ball-red), var(--balldarkshadow-red));}
}

@keyframes blue-ball-blink {
  from, to {background: radial-gradient(farthest-side at .4em .2em, var(--ball-blue), var(--balldarkshadow-blue), var(--balldarkshadow-blue));} 
  50% {background: radial-gradient(farthest-side at .4em .2em, var(--ballshadow-blue), var(--ball-blue), var(--balldarkshadow-blue));}
}


.ballshadow {
  position: absolute;
  width: .45em;
  height: .5em;
  transform: translateY(49%) rotateX(90deg) translateX(-0.05em);
  opacity: 0;
}

.circleshadow {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background: black;
  filter: blur(9px);
}


@media screen and (max-width: 500px) and (orientation: portrait) {
  /*when playing the game a hint appear in portrait mode to turn to landscape mode */
  #landscape-orientation {display: inline;}
}


@media screen and (max-width: 1030px) {
  body {
    min-height: 99vh;}

  h1 {font-size: 30px;}

  .grid-columns {
    flex-wrap: wrap;  
    width: 99%;
    margin-left: 5px;
  }

  .wrapper-size-a {
    width: 90%;
    margin: 0;
  }
  
  .wrapper-size-b {
    width: 80%;
    margin: 0;
  }

  .bring-margin-wrapper {
    margin: 5px;
    transform: translateX(12px);
   }

  .wrapper-spansize {
    font-size: 12px;
  }

  .simple-wrapper div {
    font-size: 15px;
  }

  .simple-wrapper {
    width: 90%;
  } 
}

@media screen and (max-width: 1030px) {
  .leftside, .rightside, .frontside, .backside {
    box-shadow: 0 0 0.5em rgba(48, 48, 48, 0.7) inset;
  }
}

@media screen and (max-width: 1125px) {
  .bring-shadow {
    margin: 2vh 0.7vw; 
  }
}